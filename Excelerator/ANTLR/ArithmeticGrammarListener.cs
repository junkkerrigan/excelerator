//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.7.2
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from .\ArithmeticGrammar.g4 by ANTLR 4.7.2

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

using Antlr4.Runtime.Misc;
using IParseTreeListener = Antlr4.Runtime.Tree.IParseTreeListener;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete listener for a parse tree produced by
/// <see cref="ArithmeticGrammarParser"/>.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.7.2")]
[System.CLSCompliant(false)]
public interface IArithmeticGrammarListener : IParseTreeListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="ArithmeticGrammarParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExpression([NotNull] ArithmeticGrammarParser.ExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ArithmeticGrammarParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExpression([NotNull] ArithmeticGrammarParser.ExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>Minimum</c>
	/// labeled alternative in <see cref="ArithmeticGrammarParser.component"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMinimum([NotNull] ArithmeticGrammarParser.MinimumContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>Minimum</c>
	/// labeled alternative in <see cref="ArithmeticGrammarParser.component"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMinimum([NotNull] ArithmeticGrammarParser.MinimumContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>Addition</c>
	/// labeled alternative in <see cref="ArithmeticGrammarParser.component"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAddition([NotNull] ArithmeticGrammarParser.AdditionContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>Addition</c>
	/// labeled alternative in <see cref="ArithmeticGrammarParser.component"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAddition([NotNull] ArithmeticGrammarParser.AdditionContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>Multiplication</c>
	/// labeled alternative in <see cref="ArithmeticGrammarParser.component"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMultiplication([NotNull] ArithmeticGrammarParser.MultiplicationContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>Multiplication</c>
	/// labeled alternative in <see cref="ArithmeticGrammarParser.component"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMultiplication([NotNull] ArithmeticGrammarParser.MultiplicationContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>Modulo</c>
	/// labeled alternative in <see cref="ArithmeticGrammarParser.component"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterModulo([NotNull] ArithmeticGrammarParser.ModuloContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>Modulo</c>
	/// labeled alternative in <see cref="ArithmeticGrammarParser.component"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitModulo([NotNull] ArithmeticGrammarParser.ModuloContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>UnaryPlusParenthesis</c>
	/// labeled alternative in <see cref="ArithmeticGrammarParser.component"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterUnaryPlusParenthesis([NotNull] ArithmeticGrammarParser.UnaryPlusParenthesisContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>UnaryPlusParenthesis</c>
	/// labeled alternative in <see cref="ArithmeticGrammarParser.component"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitUnaryPlusParenthesis([NotNull] ArithmeticGrammarParser.UnaryPlusParenthesisContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>Substraction</c>
	/// labeled alternative in <see cref="ArithmeticGrammarParser.component"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSubstraction([NotNull] ArithmeticGrammarParser.SubstractionContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>Substraction</c>
	/// labeled alternative in <see cref="ArithmeticGrammarParser.component"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSubstraction([NotNull] ArithmeticGrammarParser.SubstractionContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>Maximum</c>
	/// labeled alternative in <see cref="ArithmeticGrammarParser.component"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMaximum([NotNull] ArithmeticGrammarParser.MaximumContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>Maximum</c>
	/// labeled alternative in <see cref="ArithmeticGrammarParser.component"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMaximum([NotNull] ArithmeticGrammarParser.MaximumContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>Parenthesis</c>
	/// labeled alternative in <see cref="ArithmeticGrammarParser.component"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterParenthesis([NotNull] ArithmeticGrammarParser.ParenthesisContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>Parenthesis</c>
	/// labeled alternative in <see cref="ArithmeticGrammarParser.component"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitParenthesis([NotNull] ArithmeticGrammarParser.ParenthesisContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>UnaryPlusNumber</c>
	/// labeled alternative in <see cref="ArithmeticGrammarParser.component"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterUnaryPlusNumber([NotNull] ArithmeticGrammarParser.UnaryPlusNumberContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>UnaryPlusNumber</c>
	/// labeled alternative in <see cref="ArithmeticGrammarParser.component"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitUnaryPlusNumber([NotNull] ArithmeticGrammarParser.UnaryPlusNumberContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>Number</c>
	/// labeled alternative in <see cref="ArithmeticGrammarParser.component"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNumber([NotNull] ArithmeticGrammarParser.NumberContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>Number</c>
	/// labeled alternative in <see cref="ArithmeticGrammarParser.component"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNumber([NotNull] ArithmeticGrammarParser.NumberContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>UnaryMinusParenthesis</c>
	/// labeled alternative in <see cref="ArithmeticGrammarParser.component"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterUnaryMinusParenthesis([NotNull] ArithmeticGrammarParser.UnaryMinusParenthesisContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>UnaryMinusParenthesis</c>
	/// labeled alternative in <see cref="ArithmeticGrammarParser.component"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitUnaryMinusParenthesis([NotNull] ArithmeticGrammarParser.UnaryMinusParenthesisContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>Division</c>
	/// labeled alternative in <see cref="ArithmeticGrammarParser.component"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDivision([NotNull] ArithmeticGrammarParser.DivisionContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>Division</c>
	/// labeled alternative in <see cref="ArithmeticGrammarParser.component"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDivision([NotNull] ArithmeticGrammarParser.DivisionContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>Cell</c>
	/// labeled alternative in <see cref="ArithmeticGrammarParser.component"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCell([NotNull] ArithmeticGrammarParser.CellContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>Cell</c>
	/// labeled alternative in <see cref="ArithmeticGrammarParser.component"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCell([NotNull] ArithmeticGrammarParser.CellContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>UnaryMinusNumber</c>
	/// labeled alternative in <see cref="ArithmeticGrammarParser.component"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterUnaryMinusNumber([NotNull] ArithmeticGrammarParser.UnaryMinusNumberContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>UnaryMinusNumber</c>
	/// labeled alternative in <see cref="ArithmeticGrammarParser.component"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitUnaryMinusNumber([NotNull] ArithmeticGrammarParser.UnaryMinusNumberContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>Power</c>
	/// labeled alternative in <see cref="ArithmeticGrammarParser.component"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPower([NotNull] ArithmeticGrammarParser.PowerContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>Power</c>
	/// labeled alternative in <see cref="ArithmeticGrammarParser.component"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPower([NotNull] ArithmeticGrammarParser.PowerContext context);
}
